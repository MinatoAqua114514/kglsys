# ===================================================================
# MASTER CONFIGURATION FILE (application.yaml)
# ===================================================================
# This section contains configurations common to all environments
# and activates the 'dev' profile by default.
# -------------------------------------------------------------------
server:
  port: 8080 # 应用服务端口

spring:
  application:
    name: kglsys # 应用名称
  profiles:
    active: dev # 默认激活开发环境配置

# ===================================================================
# CUSTOM APPLICATION PROPERTIES
# ===================================================================
# Namespace for all custom properties.
# These can be mapped to a @ConfigurationProperties class.
# -------------------------------------------------------------------
app:
  # JWT相关配置
  jwt:
    # 密钥：在生产环境中，必须使用环境变量或配置中心来管理这个值，绝不能硬编码在此处！
    # 这是一个用于开发的示例密钥，请务必替换。
    secret: "N8ejjvh7u+WRZrV1u8AB2Q2MSsYwBQzX0BvnHzdyDw0zN5jzEqH6DbSEeZ+pCFW3KFxrYipzL9cJzXn5rcr+Sg=="
    # Token有效期（毫秒），例如：24小时
    expiration-ms: 86400000

  # RabbitMQ队列名称配置
  rabbitmq:
    tasks-queue: "code_tasks_queue"     # 发送判题任务的队列
    results-queue: "code_results_queue" # 接收判题结果的队列
    email-queue: "email-verify-code"    # 邮箱验证码发送队列

  # WebSocket端点配置
  websocket:
    endpoint: "/api/ws" # WebSocket连接端点

  # 前端基础URL配置
  frontend:
    base-url: http://localhost:5173 # 这是您前端开发服务器的地址

---
# ===================================================================
# DEVELOPMENT PROFILE (application-dev.yml)
# ===================================================================
# Configurations specific to the 'dev' environment.
# Activated by 'spring.profiles.active=dev' in the master section.
# -------------------------------------------------------------------
spring:
  config:
    activate:
      on-profile: dev # 标识此部分为dev环境配置

  # ===============================================================
  # DATABASE (MySQL)
  # ===============================================================
  datasource:
    url: "jdbc:mysql://localhost:3306/kglsys?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai"
    username: root
    password: "111111"
    driver-class-name: com.mysql.cj.jdbc.Driver

  # ===============================================================
  # JPA / HIBERNATE
  # ===============================================================
  jpa:
    hibernate:
      # ddl-auto:
      #   - none: 不做任何操作 (生产环境推荐)
      #   - validate: 验证schema是否匹配
      #   - update: 更新schema (开发环境常用)
      #   - create: 每次启动时删除并重新创建schema
      #   - create-drop: 启动时创建，关闭时删除 (测试常用)
      ddl-auto: validate
    # 在控制台显示执行的SQL语句，便于开发调试
    show-sql: true
    properties:
      hibernate:
        # 格式化显示的SQL语句
        format_sql: true
    open-in-view: false

  # ===============================================================
  # CACHE (Redis)
  # ===============================================================
  data:
    redis:
      host: 192.168.140.128
      port: 6380
      database: 0
      # 如果你的Redis没有密码，请注释掉下面这行
      # password: your-redis-password

  # ===============================================================
  # MESSAGE QUEUE (RabbitMQ)
  # ===============================================================
  rabbitmq:
    host: 192.168.140.128
    port: 5672
    username: guest
    password: guest
    # virtual-host: / # 默认是'/'，通常无需显式配置

  # ===============================================================
  # Mail Sender (Spring-Mail)
  # ===============================================================
  mail:
    username: loveaquaonline@qq.com
    password: kyszoprbxmzzbaaa
    host: smtp.qq.com
    port: 465
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            enable: true
          socketFactory:
            port: 465
            class: javax.net.ssl.SSLSocketFactory